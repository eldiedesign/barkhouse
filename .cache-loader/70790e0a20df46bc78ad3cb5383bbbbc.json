{"remainingRequest":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/buble-loader/index.js??ref--2-1!/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/eslint-loader/index.js!/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/import-glob/index.js!/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/resources/assets/scripts/routes/product-form.js","dependencies":[{"path":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/resources/assets/scripts/routes/product-form.js","mtime":1661428562835},{"path":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/cache-loader/dist/cjs.js","mtime":1638363699586},{"path":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/buble-loader/index.js","mtime":1638363698857},{"path":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/eslint-loader/index.js","mtime":1638363701704},{"path":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/node_modules/import-glob/index.js","mtime":1638363704032}],"contextDependencies":[],"result":["export default {\n  init: function init() {\n\n    // since the easiest (?) way to remove one panel from the list of panels which make up the one 'panels' param was to remove the whole param and update the current url, when we arrive and there's no 'panels' param, we check for panels in sessionStorage and, if panels found, rebuild the param and refresh the page with that param\n    var panelsParam = '',\n        hasPanelInSession = false,\n        formUrl = window.location.href;\n    if(!formUrl.includes('panels')) {\n      for (var i = 0; i < sessionStorage.length; i++) {\n        var key = sessionStorage.key(i),\n            value = sessionStorage.getItem(sessionStorage.key(i));\n        if(key.includes('bh_panel')) {\n          console.log(key);\n          hasPanelInSession = true;\n          panelsParam += key.replace('bh_panel ', '')+value+',';\n        }\n      }\n      if(hasPanelInSession) {\n        panelsParam = panelsParam.slice(-1) == ',' ? panelsParam.slice(0, -1) : panelsParam;\n        if(formUrl.includes('?')) {\n          window.location.href = formUrl+encodeURI('&panels='+panelsParam);\n        } else {\n          window.location.href = formUrl+encodeURI('?panels='+panelsParam);\n        }\n      }\n    }\n    if(!formUrl.includes('slabs')) {\n      for (var slabIndex = 0; slabIndex < sessionStorage.length; slabIndex++) {\n        var slabKey = sessionStorage.slabKey(slabIndex),\n            slabValue = sessionStorage.getItem(sessionStorage.slabKey(slabIndex));\n        if(slabKey.includes('bh_slab')) {\n          console.log(slabKey);\n          hasPanelInSession = true;\n          panelsParam += slabKey.replace('bh_slab ', '')+slabValue+',';\n        }\n      }\n      if(hasPanelInSession) {\n        panelsParam = panelsParam.slice(-1) == ',' ? panelsParam.slice(0, -1) : panelsParam;\n        if(formUrl.includes('?')) {\n          window.location.href = formUrl+encodeURI('&slabs='+panelsParam);\n        } else {\n          window.location.href = formUrl+encodeURI('?slabs='+panelsParam);\n        }\n      }\n    }\n\n    // if a panel is removed form the form, also remove it from sessionStorage\n    var deleteItems = document.querySelectorAll('button.delete_list_item');\n    if(deleteItems) {\n      deleteItems.forEach(function(btn) {\n        btn.addEventListener('click', function(e) {\n          e.preventDefault();\n\n          for (var i = 0; i < sessionStorage.length; i++) {\n            var key = sessionStorage.key(i);\n            if(key.includes('bh_panel')) {\n              console.log(key);\n              if(btn.closest('.gfield_list_group').querySelector('input').value.includes(key.replace('bh_panel ', ''))) {\n                sessionStorage.removeItem(key);\n              }\n            }\n            if(key.includes('bh_slab')) {\n              console.log(key+ 'poop');\n              if(btn.closest('.gfield_list_group').querySelector('input').value.includes(key.replace('bh_slab ', ''))) {\n                sessionStorage.removeItem(key);\n              }\n            }\n          }\n          console.log(sessionStorage);\n          var url = new URL(window.location.href)\n          var params = new URLSearchParams(url.search.slice(1))\n          params.delete('panels')\n          window.history.replaceState(\n            {},\n            '',\n            ((window.location.pathname) + \"?\" + params + (window.location.hash))\n          )\n        });\n      })\n    }\n\n  },\n};\n",{"version":3,"file":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop/resources/assets/scripts/routes/product-form.js","sources":["resources/assets/scripts/routes/product-form.js"],"sourcesContent":["export default {\n  init() {\n\n    // since the easiest (?) way to remove one panel from the list of panels which make up the one 'panels' param was to remove the whole param and update the current url, when we arrive and there's no 'panels' param, we check for panels in sessionStorage and, if panels found, rebuild the param and refresh the page with that param\n    var panelsParam = '',\n        hasPanelInSession = false,\n        formUrl = window.location.href;\n    if(!formUrl.includes('panels')) {\n      for (var i = 0; i < sessionStorage.length; i++) {\n        var key = sessionStorage.key(i),\n            value = sessionStorage.getItem(sessionStorage.key(i));\n        if(key.includes('bh_panel')) {\n          console.log(key);\n          hasPanelInSession = true;\n          panelsParam += key.replace('bh_panel ', '')+value+',';\n        }\n      }\n      if(hasPanelInSession) {\n        panelsParam = panelsParam.slice(-1) == ',' ? panelsParam.slice(0, -1) : panelsParam;\n        if(formUrl.includes('?')) {\n          window.location.href = formUrl+encodeURI('&panels='+panelsParam);\n        } else {\n          window.location.href = formUrl+encodeURI('?panels='+panelsParam);\n        }\n      }\n    }\n    if(!formUrl.includes('slabs')) {\n      for (var slabIndex = 0; slabIndex < sessionStorage.length; slabIndex++) {\n        var slabKey = sessionStorage.slabKey(slabIndex),\n            slabValue = sessionStorage.getItem(sessionStorage.slabKey(slabIndex));\n        if(slabKey.includes('bh_slab')) {\n          console.log(slabKey);\n          hasPanelInSession = true;\n          panelsParam += slabKey.replace('bh_slab ', '')+slabValue+',';\n        }\n      }\n      if(hasPanelInSession) {\n        panelsParam = panelsParam.slice(-1) == ',' ? panelsParam.slice(0, -1) : panelsParam;\n        if(formUrl.includes('?')) {\n          window.location.href = formUrl+encodeURI('&slabs='+panelsParam);\n        } else {\n          window.location.href = formUrl+encodeURI('?slabs='+panelsParam);\n        }\n      }\n    }\n\n    // if a panel is removed form the form, also remove it from sessionStorage\n    const deleteItems = document.querySelectorAll('button.delete_list_item');\n    if(deleteItems) {\n      deleteItems.forEach(function(btn) {\n        btn.addEventListener('click', function(e) {\n          e.preventDefault();\n\n          for (var i = 0; i < sessionStorage.length; i++) {\n            var key = sessionStorage.key(i);\n            if(key.includes('bh_panel')) {\n              console.log(key);\n              if(btn.closest('.gfield_list_group').querySelector('input').value.includes(key.replace('bh_panel ', ''))) {\n                sessionStorage.removeItem(key);\n              }\n            }\n            if(key.includes('bh_slab')) {\n              console.log(key+ 'poop');\n              if(btn.closest('.gfield_list_group').querySelector('input').value.includes(key.replace('bh_slab ', ''))) {\n                sessionStorage.removeItem(key);\n              }\n            }\n          }\n          console.log(sessionStorage);\n          const url = new URL(window.location.href)\n          const params = new URLSearchParams(url.search.slice(1))\n          params.delete('panels')\n          window.history.replaceState(\n            {},\n            '',\n            `${window.location.pathname}?${params}${window.location.hash}`\n          )\n        });\n      })\n    }\n\n  },\n};\n"],"names":["const"],"mappings":"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","sourceRoot":"/Users/this/Local Sites/barkhousecontent/app/public/wp-content/themes/barkhouse-shop"}]}